#+latex_HEADER: \usepackage{ctex}

* 使用环境
  Windows10 + emacs 26.3 
** 下载安装
   1. 搜索"清华大学镜像"（使用这个下载速度杠杠的）
   2. 进入gnu->emacs->windows->emacs-26（需要的使用的版本）
   3. 下载后缀为x86_x64.zip的某本子版本
   4. 加压即可使用
** 简单配置
   1. 在~/AppData/Roaming/下创建.emacs文件
   2. 在.emacs中添加相应的配置即可
** 模块化配置
   目前使用单一文件
   1. 在~/AppData/Roaming/下创建.emacs.d目录
   2. 在~/AppData/Roaming/.emacs.d/下创建文件init.el
   3. 在init.el中添加相应的配置即可
* 总位置如下
  仅参考，随时汇编，以github中保存的为准
  #+BEGIN_SRC emacs-lisp
    ;; 自定义
    ;; M-x customize-group Return 输入某一个类别可以设置对应的种类
    ;; 如：rigion 设置激活区域，hl-line 设置当前行高亮
    (custom-set-variables
     ;; custom-set-variables was added by Custom.
     ;; If you edit it by hand, you could mess it up, so be careful.
     ;; Your init file should contain only one such instance.
     ;; If there is more than one, they won't work right.
     ;; agenda 使用需要的文件（文件名称任意）
     '(org-agenda-files "~/.emacs.d/agenda")
     '(org-agenda-include-diary t)
     ;; 延迟补全的时间
     '(company-idle-delay 0.3)
     ;; 开始补全的最小字符长度
     '(company-minimum-prefix-length 1)
     ;; 设置光标类型
     '(cursor-type (quote bar))
     ;; 全局当前行高亮
     '(global-hl-line-mode t)
     ;; 全局显示行号
     '(global-linum-mode t)
     ;; 关闭欢迎页面
     '(inhibit-startup-screen t)
     ;; 禁止生产备份文件
     '(make-backup-files nil)
     ;; 禁止自动保存临时文件的产生
     '(auto-save-default nil)
     ;; 隐藏菜单栏
     '(menu-bar-mode nil)
     ;; 禁止org导出html是连接符转下划线
     '(org-export-with-sub-superscripts nil)
     ;; 隐藏滚动条
     '(scroll-bar-mode nil)
     ;; 按行滚动，细化滚动UI
     '(pixel-scroll-mode t)
     '(scroll-conservatively 1000000)
     '(scroll-preserve-screen-position 1)
     ;; 高亮配对括号
     '(show-paren-mode t)
     ;; 隐藏工具栏
     '(tool-bar-mode nil))
    (custom-set-faces
     ;; custom-set-faces was added by Custom.
     ;; If you edit it by hand, you could mess it up, so be careful.
     ;; Your init file should contain only one such instance.
     ;; If there is more than one, they won't work right.
     ;; 设置当前行高亮的背景色和字体颜色
     '(hl-line ((t (:background "#586F3E" :foreground "#dddddd"))))
     ;; 设置选中区域的背景色和字体颜色
     '(region ((t (:background "#863434" :foreground "#cccccc")))))


    ;; 开启最近打开文件的记录功能
    (recentf-mode t)
    (global-set-key (kbd "C-x C-r") 'recentf-open-files)

    ;; 设置打开配置文件快捷键
    (defun open-init-file()
      (interactive)
      (find-file "~/.emacs.d/init.el"))
    (global-set-key (kbd "<f2>") 'open-init-file)

    ;; agenda 快捷键
    (global-set-key (kbd "C-c a") 'org-agenda)

    ;;中英文字体对齐
    ;; Auto generated by cnfonts
    ;; <https://github.com/tumashu/cnfonts>
    (set-face-attribute
     'default nil
     :font (font-spec :name "-outline-Consolas-bold-italic-normal-mono-*-*-*-*-c-*-iso10646-1"
		      :weight 'normal
		      :slant 'normal
		      :size 12.5))
    (dolist (charset '(kana han symbol cjk-misc bopomofo))
      (set-fontset-font
       (frame-parameter nil 'font)
       charset
       (font-spec :name "-outline-文泉驿等宽微米黑-normal-normal-normal-sans-*-*-*-*-p-*-iso10646-1"
		  :weight 'normal
		  :slant 'normal
		  :size 13.5)))

    ;; 添加源（用于包的安装）
    (require 'package)
    (add-to-list 'package-archives '("melpa-stable" . "http://www.mirrorservice.org/sites/stable.melpa.org/packages/") t)
    (package-initialize)

    ;; 定义变量
    ;; 指定使用的包
    (defvar package-list '(hungry-delete ;;智能删除
			   base16-theme ;; 主题（语法高亮）
			   smartparens ;; 补全括号、引号之类的
			   counsel ;; minibuffer 补全提示
			   htmlize ;; org 导出 html
			   popwin ;; 打开新窗口，光标自动定位
			   company)) ;; 补全
    ;; 设置变量方便管理包（如：使用命令可以自动删除包）
    (setq package-selected-packages package-list)
    ;; fetch the list of packages available
    ;; 获取可用包信息
    (unless package-archive-contents
      (package-refresh-contents))
    ;; install the missing packages
    ;; 安装缺少的包
    (dolist (package package-list)
      (unless (package-installed-p package)
	(package-install package)))


    ;; 下面的都需要下载对应的包


    ;; 全局补全
    (global-company-mode t)
    ;; 设置主题
    ;;(load-theme 'monokai t)
    (load-theme 'base16-default-dark t)

    ;; 智能删除（可能一次删除多个）
    (global-hungry-delete-mode)
    ;; 补全引号、括号之类的
    (smartparens-global-mode t)

    ;; enable this if you want `swiper' to use it
    ;; (setq search-default-mode #'char-fold-to-regexp)
    (ivy-mode 1)
    (setq ivy-use-virtual-buffers t)
    (setq enable-recursive-minibuffers t)
    ;; C-n/C-p 可以选择 minibuffer 中的选项
    ;; C-x b 可以切换 buffer
    (global-set-key "\C-s" 'swiper)
    (global-set-key (kbd "<f6>") 'ivy-resume)
    (global-set-key (kbd "M-x") 'counsel-M-x)
    (global-set-key (kbd "C-x C-f") 'counsel-find-file)
    (global-set-key (kbd "C-h f") 'counsel-describe-function)
    (global-set-key (kbd "C-h v") 'counsel-describe-variable)

    ;; 打开窗口，光标自动匹配
    (popwin-mode t)
  #+END_SRC

* 配置解析
** 修改配置
   表示修改配置文件 .emacs
*** 修改配置，取消菜单栏、工具栏、滚动条
    #+BEGIN_SRC emacs-lisp
      (tool-bar-mode -1)
      (menu-bar-mode -1)
      (scroll-bar-mode -1)
    #+END_SRC

*** 禁止导出 HTML 时 '-' 转成下标
    #+BEGIN_SRC emacs-lisp
      (setq org-export-with-sub-superscripts nil)
    #+END_SRC

*** 设置文件编码 utf8
    #+BEGIN_SRC emacs-lisp
      ;;设置默认读入文件编码
      (prefer-coding-system 'utf-8)
      ;;设置写入文件编码
      (setq default-buffer-file-coding-system 'utf-8)
    #+END_SRC

*** 显示行号
    #+BEGIN_SRC emacs-lisp
      ;;显示行号
      (global-linum-mode t)
    #+END_SRC

*** 开启执行开关
    #+BEGIN_SRC emacs-lisp
      ;;可以执行的语言开关是指
      (setq org-confirm-babel-evaluate nil)
      (org-babel-do-load-languages
       'org-babel-load-languages
       '((emacs-lisp . t)
	 (C . t)
	 (js . t)
	 (css . t)
	 (org . t)
	 (latex . t)
	 (lisp . t)
	 (haskell . t)
	 (python . t)
	 (shell . t)))
    #+END_SRC

*** 修改配置，添加源
    方便安装包
    #+BEGIN_SRC emacs-lisp
      (setq package-archives '(("gnu"  . "http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")
			       ("melpa stable"  . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa-stable/")
			       ("emacswiki" . "https://mirrors.tuna.tsinghua.edu.cn/elpa/emacswiki/")
			       ("org" . "https://mirrors.tuna.tsinghua.edu.cn/elpa/org/")
			       ("melpa" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/")))
      (package-initialize) ;; You might already have this line
    #+END_SRC

** 安装包
   安装命令 M-x package-install company
*** 导出 HTML
    htmlize
*** 补全输入（提示）
    安装 company 后修改配置，使用全局补全
    #+BEGIN_SRC emacs-lisp
      ;;全局补全
      (add-hook 'after-init-hook 'global-company-mode)
    #+END_SRC
*** 编辑 haskell, 使用 ghci 
    haskell-mode
*** 使用主题（需要下载）
    使用的书写形式太多了，具体配置需搜索
    #+BEGIN_SRC emacs-lisp
      ;;(require 'darcula-theme)
      ;;(load-theme 'solarized-dark t)
      ;;(load-theme 'solarized-light t)
      ;;(load-theme 'molokai t)
      ;;(load-theme 'solarized t)
      (load-theme 'base16-default-dark t)
    #+END_SRC

    #+RESULTS:
    : darcula-theme

*** 中英文对齐（主要适配 org mode 中的 table）
    cnfonts
    1. M-x cnfonts-edit-profile 进入GUI设置界面
    2. 分别选择英文、中文字体（中文字体需要等宽字体）
    3. 在字号菜单下调整字体大小，时上面的右边竖线对齐，点击完成（一般减少中文字号即可对齐）
    4. 在其他菜单下生成配置代码，拷贝代码添加到 emacs 配置中
    #+BEGIN_SRC emacs-lisp
      ;;中英文字体对齐
      ;; Auto generated by cnfonts
      ;; <https://github.com/tumashu/cnfonts>
      (set-face-attribute
       'default nil
       :font (font-spec :name "-outline-Consolas-bold-italic-normal-mono-*-*-*-*-c-*-iso10646-1"
			:weight 'normal
			:slant 'normal
			:size 12.5))
      (dolist (charset '(kana han symbol cjk-misc bopomofo))
	(set-fontset-font
	 (frame-parameter nil 'font)
	 charset
	 (font-spec :name "-outline-文泉驿等宽微米黑-normal-normal-normal-sans-*-*-*-*-p-*-iso10646-1"
		    :weight 'normal
		    :slant 'normal
		    :size 13.5)))
    #+END_SRC

** 导出 pdf （含有中文）
*** 使用中文包
    在编辑的 org 文件起始位置添加说明
    #+BEGIN_SRC org
      ,#+LATEX_HEADER: \usepackage{ctex}
    #+END_SRC
*** 修改 emacs 配置
    #+BEGIN_SRC emacs-lisp
      (setq org-latex-pdf-process '("xelatex -interaction nonstopmode %f"
				    "xelatex -interaction nonstopmode %f"))
    #+END_SRC
*** 安装导出软件 texlive
    网上搜索很多地方有下载

** 使用 slime (common lisp)
   1. 安装 slime
   2. 到 [[http://www.sbcl.org/platform-table.html][sbcl 官网]] 下载安装（安装路径不能有空格）
   3. 修改配置
   #+BEGIN_SRC emacs-lisp
     ;;需要添加 sbcl 程序来运行，安装路径不能有空格
     ;;(setq inferior-lisp-program "/opt/sbcl/bin/sbcl")
     (setq inferior-lisp-program "C:/sbcl/sbcl.exe")
     (setq slime-contribs '(slime-fancy))
   #+END_SRC

** emacs 配置源文件
   正常使用时的配置，根据对应的安装包进行安装
   #+BEGIN_SRC emacs-lisp
     (require 'package)
     (custom-set-variables
      ;; custom-set-variables was added by Custom.
      ;; If you edit it by hand, you could mess it up, so be careful.
      ;; Your init file should contain only one such instance.
      ;; If there is more than one, they won't work right.
      '(package-archives
	(quote
	 (("gnu" . "https://elpa.gnu.org/packages/")
	  ("melpa" . "https://melpa.org/packages/"))))
      '(package-selected-packages
	(quote
	 (slime slimee company htmlize base16-theme cnfonts haskell-mode))))
     (package-initialize)
     (custom-set-faces
      ;; custom-set-faces was added by Custom.
      ;; If you edit it by hand, you could mess it up, so be careful.
      ;; Your init file should contain only one such instance.
      ;; If there is more than one, they won't work right.
      )

     ;;全局补全
     (add-hook 'after-init-hook 'global-company-mode)
     ;;显示行号
     (global-linum-mode t)

     ;;html导出时禁‘-’禁止转成下标
     (setq org-export-with-sub-superscripts nil)

     ;;设置默认读入文件编码
     (prefer-coding-system 'utf-8)
     ;;设置写入文件编码
     (setq default-buffer-file-coding-system 'utf-8)

     ;;可以执行的语言开关是指
     (setq org-confirm-babel-evaluate nil)
     (org-babel-do-load-languages
      'org-babel-load-languages
      '((emacs-lisp . t)
	(C . t)
	(js . t)
	(css . t)
	(org . t)
	(latex . t)
	(lisp . t)
	(haskell . t)
	(python . t)
	(shell . t)))


     ;;中英文字体对齐
     ;; Auto generated by cnfonts
     ;; <https://github.com/tumashu/cnfonts>
     (set-face-attribute
      'default nil
      :font (font-spec :name "-outline-Consolas-bold-italic-normal-mono-*-*-*-*-c-*-iso10646-1"
		       :weight 'normal
		       :slant 'normal
		       :size 12.5))
     (dolist (charset '(kana han symbol cjk-misc bopomofo))
       (set-fontset-font
	(frame-parameter nil 'font)
	charset
	(font-spec :name "-outline-文泉驿等宽微米黑-normal-normal-normal-sans-*-*-*-*-p-*-iso10646-1"
		   :weight 'normal
		   :slant 'normal
		   :size 13.5)))

     ;;关闭工具栏、菜单栏、滚动条
     (tool-bar-mode -1)
     (menu-bar-mode -1)
     (scroll-bar-mode -1)

     (load-theme 'base16-default-dark t)

     ;;需要添加 sbcl 程序来运行，安装路径不能有空格
     ;;(setq inferior-lisp-program "/opt/sbcl/bin/sbcl")
     (setq inferior-lisp-program "C:/sbcl/sbcl.exe")
     (setq slime-contribs '(slime-fancy))
   #+END_SRC
* 一些错误特征
** recentf
   recentf 打开大的org文件肯能会dump，正常打开则不会，目前发现这样
